MODULE IssueDashboard;

REQUIRE IssueLog, ProjectExternal, Dashboard, DocIssue;

NAMESPACE Project;

newStatus = DATA IssueStatus ();
nameNewStatus 'Новый статус' () = name(newStatus());

EXTEND FORM options PROPERTIES() nameNewStatus;
DESIGN options { commons { MOVE PROPERTY(nameNewStatus()); } }

dateTimeCreated(i) <- currentDateTime() WHEN SET(i IS Issue); 
author(i) <- currentUser() WHEN SET(i IS Issue); 
dateFrom(i) <- currentDate() WHEN SET(i IS Issue); 
status(i) <- newStatus() WHEN SET(i IS Issue);

FORM issueDashboard 'Мои задачи'

    OBJECTS o = Issue LAST 
    PROPERTIES(o) READONLY number, name, descriptionString, dateTimeCreated, dateTimeUpdated, dateFrom, dateTo, doneRatio, estimatedHours, nameProject, 
                           nameCustomer, numberDocument, nameAuthor, nameAssignedTo, nameTracker, nameStatus
    PROPERTIES(o) NEWSESSION NEW
    PROPERTIES(o) SHOWIF NOT external(o) NEWSESSION EDIT, DELETE
    
    FILTERGROUP open FILTER 'Открытые' NOT isClosed(status(o)) DEFAULT 
    FILTERGROUP inner FILTER 'Внутренние' NOT external(o) DEFAULT 
    FILTERGROUP my FILTER 'Мои задачи' assignedTo(o) = currentUser() OR author(o) = currentUser() DEFAULT 
                   FILTER 'Назначенные мне' assignedTo(o) = currentUser()
                   FILTER 'Созданные мною' author(o) = currentUser()
                   
    ORDERS number(o)
    
    OBJECTS l = IssueLog
    PROPERTIES (l) READONLY dateTime, nameUser, changes, note
    FILTERS issue(l) == o
;

DESIGN issueDashboard {
    OBJECTS {
        horizontal = FALSE;
        BOX (o) { fill = 3; }
        BOX (l) { fill = 1; }
    }
}

NAVIGATOR {
    dashboard {
        NEW issueDashboard;
    }
}

note 'Подписан на уведомления' = DATA BOOLEAN (Project, IssueStatus, Employee);

WHEN CHANGED (status(Issue i)) AND (note(project(i), status(i), Employee e) OR note(project(i), PREV (status(i)), e)) DO {
    EMAIL 
        SUBJECT CONCAT ' ', 'Изменение статуса задачи', number(i)
        TO email(e)
        BODY CONCAT ' ', 'Статус задачи', number(i), 'по проекту ' + name(project(i)), 'изменен', 'с ' + PREV (nameStatus(i)), 'на ' + nameStatus(i);
}

FORM projectNotifications 'Уведомления по проектам'
    OBJECTS p = Project
    PROPERTIES (p) READONLY id, name, identifier, nameCustomer, inactive, nameExternal
    FILTERGROUP active FILTER 'Активные' NOT inactive(p) DEFAULT 
    
    OBJECTS e = Employee PANEL
    FILTERS e == currentUser()
    
    OBJECTS s = IssueStatus
    PROPERTIES note(p, s, e) DRAW s
    PROPERTIES (s) READONLY name, order, isClosed 
    ORDERS order(s)
;

DESIGN projectNotifications {
    OBJECTS { 
        NEW main FIRST {
            fill = 1;
            type = SPLITH;
            MOVE BOX (p) { fill = 3; }
            MOVE BOX (s) { fill = 1; }
        }
    }
}

NAVIGATOR {
    project {
        NEW projectNotifications;
    }
}