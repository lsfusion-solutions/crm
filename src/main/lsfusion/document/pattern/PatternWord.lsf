MODULE PatternWord;

REQUIRE DocWord, Pattern;

NAMESPACE Pattern;

in 'Вкл.' = DATA BOOLEAN (TemplateEntry, Pattern);

EXTEND FORM template 
    OBJECTS p = Pattern
    PROPERTIES in(te, p), text(p) READONLY PANEL, noteString(p) READONLY, textString(p) READONLY 
;

DESIGN template {
    OBJECTS {
        MOVE BOX (t);
        NEW patterns AFTER BOX (t) {
            horizontal = TRUE;
            fill = 1;
            MOVE BOX (te) {
                PROPERTY (value(te)) { valueWidth = 50; }
            }
            NEW pattern {
                horizontal = TRUE;
                fill = 1;
                MOVE BOX (p);
                NEW text {
                    caption = 'Текст';
                    fill = 1;
                    MOVE PROPERTY (text(p)) { caption = ''; fill = 1; }
                }
            }
        }
    }
}

in(Template t, Pattern p) = GROUP SUM 1 IF in(TemplateEntry te, p) BY template(te);

EXTEND FORM patterns
    OBJECTS t = Template
    PROPERTIES (t) READONLY name, id
    FILTERS in(t, p)
       
    OBJECTS te = TemplateEntry
    PROPERTIES (te) READONLY nameType, key, description, value
    FILTERS template(te) == t, in(te, p)
;

DESIGN patterns {
    OBJECTS {
        NEW templates {
            horizontal = TRUE;
            fill = 1;
            MOVE BOX (t) { fill = 1; }
            MOVE BOX (te) { fill = 4; }
        }
    }
}

select 'Отм.' = DATA LOCAL BOOLEAN (TemplateEntry, Pattern);

text (TemplateEntry te) =  GROUP CONCAT text(Pattern pt) IF select(te, pt), (IF type(te) = Type.list THEN (OVERRIDE rowSeparator(te),'\r') ELSE '') ORDER pt;

resetSelected 'Сбросить отмеченные' (TemplateEntry te) {
    select(te, Pattern p) <- NULL;
}

FORM editTemplatePattern 'Заготовки'
    OBJECTS te = TemplateEntry PANEL 
    OBJECTS p = Pattern
    PROPERTIES select(te, p)
    PROPERTIES (p) READONLY text PANEL, noteString, textString
    PROPERTIES resetSelected(te) DRAW p TOOLBAR 
    FILTERS in(te, p)
    
    EVENTS ON OK {
        value(te) <- OVERRIDE text(te), '';
    }
;

DESIGN editTemplatePattern {
    size = (1200, 800);
    OBJECTS {
        NEW main FIRST {
            horizontal = TRUE;
            fill = 1;
            MOVE BOX (p);
            NEW text {
                caption = 'Текст';
                fill = 1;
                MOVE PROPERTY (text(p)) { fill = 1; caption = ''; }
            }
        }
    }
}
setText 'Использовать заготовки' (TemplateEntry te) {
    SHOW editTemplatePattern OBJECTS te = te;
}

countPattern 'Есть заготовки' (TemplateEntry te) = GROUP SUM 1 IF in(te, Pattern p);
background (TemplateEntry te) += WHEN countPattern(te) THEN RGB (235, 255, 235);

EXTEND FORM editTemplate 
    PROPERTIES setText(te) GRID READONLYIF NOT countPattern(te) BACKGROUND background(te)
    FILTERGROUP entry FILTER 'Незаполненные' NOT value(te)
                      FILTER 'С заготовками' countPattern(te)
                      FILTER 'Обязательные' required(te)
;

overCopy(TemplateEntry n, TemplateEntry t) + {
    in(n, Pattern p) <- in(t, p);
}