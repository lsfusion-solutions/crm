MODULE Agreement;

REQUIRE Contract, Doc;

NAMESPACE Agreement;

CLASS Agreement 'Соглашение' : Document;
TABLE agreement (Agreement);

id 'Код' = DATA STRING[15] (Agreement) INDEXED CHARWIDTH 5 IN id;
agreement (id) = GROUP AGGR Agreement c BY id (c);

name 'Наименование' = DATA ISTRING[150](Agreement) CHARWIDTH 20;
series 'Серия' = DATA STRING[15](Agreement) IN id;
number 'Номер' = DATA STRING[15](Agreement) IN id;

@defineNumeratedDefault(Agreement, 'Соглашения', 'СГ');

contract = DATA Contract(Agreement);
idContract 'Код договора' (Agreement a) = id(contract(a));
numberContract 'Номер договора' (Agreement a) = number(contract(a)) IN id;
customer (Agreement a) = customer(contract(a));
nameCustomer 'Клиент' (Agreement a) = nameCustomer(contract(a));
legalEntity (Agreement a) = legalEntity(contract(a));
nameLegalEntity 'Организация' (Agreement a) = nameLegalEntity(contract(a));
company (Agreement a) = company(contract(a));
nameCompany 'Компания' (Agreement a) = name(company(a));

authorisedPersonLegalEntity = DATA Contact.Contact(Agreement);
idAuthorisedPersonLegalEntity 'Код уп. лица организации' (Agreement c) = id(authorisedPersonLegalEntity(c));
nameAuthorisedPersonLegalEntity 'Уп. лицо организации' (Agreement c) = name(authorisedPersonLegalEntity(c));
authorisedDocumentLegalEntity 'На основании' = DATA ISTRING[1000](Agreement) CHARWIDTH 20;

authorisedPersonCompany  (Agreement c) = DATA Contact.Contact(Agreement);
idAuthorisedPersonCompany 'Код уп. лица компании' (Agreement c) = id(authorisedPersonCompany(c));
nameAuthorisedPersonCompany 'Уп. лицо компании' (Agreement c) = name(authorisedPersonCompany(c));
authorisedDocumentCompany 'На основании' = DATA ISTRING[1000](Agreement) CHARWIDTH 20;

WHEN LOCAL (CHANGED (legalEntity(Agreement c)) OR CHANGED (contract(c))) AND NOT CHANGED (authorisedPersonLegalEntity(c)) DO {
    authorisedPersonLegalEntity (c) <- OVERRIDE authorisedPersonLegalEntity(contract(c)), authorisedPerson(legalEntity(c));
    authorisedDocumentLegalEntity (c) <- OVERRIDE authorisedDocumentLegalEntity(contract(c)), authorisedDocument(authorisedPersonLegalEntity(c)), authorisedDocument(legalEntity(c));
}
WHEN LOCAL CHANGED (authorisedPersonLegalEntity(Agreement c)) AND NOT CHANGED (legalEntity(c)) DO {
    authorisedDocumentLegalEntity (c) <- authorisedDocument(authorisedPersonLegalEntity(c));
}
WHEN LOCAL (CHANGED (company(Agreement c)) OR CHANGED (contract(c))) AND NOT CHANGED (authorisedPersonCompany(c)) DO {
    authorisedPersonCompany (c) <- OVERRIDE authorisedPersonCompany(contract(c)), authorisedPerson(company(c));
    authorisedDocumentCompany (c) <- OVERRIDE authorisedDocumentCompany(contract(c)), authorisedDocument(authorisedPersonCompany(c)), authorisedDocument(company(c));
}
WHEN LOCAL CHANGED (authorisedPersonCompany(Agreement c)) AND NOT CHANGED (company(c)) DO {
    authorisedDocumentCompany (c) <- authorisedDocument(authorisedPersonCompany(c));
}

CONSTRAINT authorisedPersonLegalEntity(Agreement c) AND NOT legalEntity(authorisedPersonLegalEntity(c)) == legalEntity(c) 
    CHECKED BY authorisedPersonLegalEntity[Agreement] MESSAGE 'Организация уполномоченного лица не совпадает с организацией договора';
CONSTRAINT authorisedPersonCompany(Agreement c) AND NOT legalEntity(authorisedPersonCompany(c)) == company(c) 
    CHECKED BY authorisedPersonCompany[Agreement] MESSAGE 'Организация уполномоченного лица не совпадает с компанией договора';
CONSTRAINT Agreement a IS Agreement AND NOT contract(a) MESSAGE 'Для соглашения должен быть задан договор';

date 'Дата' = DATA DATE (Agreement) IN id;

CLASS AgreementType 'Тип соглашения' : Type;
TABLE agreementType(AgreementType);

name 'Наименование' = DATA ISTRING[50](AgreementType) CHARWIDTH 15;

name(AgreementType c) += name(c);

FORM agreementType 'Тип соглашения'
    OBJECTS o = AgreementType PANEL
    PROPERTIES(o) name
    
    EDIT AgreementType OBJECT o
;

FORM agreementTypes 'Типы соглашения'
    OBJECTS o = AgreementType
    PROPERTIES(o) READONLY name
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    
    LIST AgreementType OBJECT o
;

type = DATA AgreementType(Agreement);
nameType 'Тип соглашения' (Agreement c) = name(type(c)) CHARWIDTH 15;

description (Agreement a) = CONCAT ' / ', number(a), date(a), name(a), nameType(a) CHARWIDTH 25; 

sum 'Стоимость' = DATA NUMERIC[16,5](Agreement);

dateSigningCompany 'Дата подписания компанией' = DATA DATE (Agreement);
dateSending 'Дата отправки' = DATA DATE (Agreement);
dateSigningCustomer 'Дата подписания клиентом' = DATA DATE (Agreement);
dateReceiving 'Дата получения' = DATA DATE (Agreement);
dateClosing 'Дата закрытия' = DATA DATE (Agreement);

active (Agreement c) = NOT dateClosing(c) <= currentDate();

note 'Примечание' = DATA ISTRING[100](Agreement) CHARWIDTH 20;
text 'Текст' = DATA TEXT (Agreement);
textString 'Текст' (Agreement c) = ISTRING[500](text(c)) CHARWIDTH 20;
terms 'Условия' = DATA TEXT (Agreement) CHARWIDTH 20;

sendingWay = DATA SendingWay(Agreement);
nameSendingWay 'Способ отправки документа' (Agreement c) = name(sendingWay(c));

id(Agreement c) += id(c);
number(Agreement c) += number(c);
date(Agreement c) += date(c);
name(Agreement c) += name(c);
type(Agreement c) += type(c);
note(Agreement c) += note(c);
text(Agreement c) += text(c);
dateSigningCompany(Agreement c) += dateSigningCompany(c);
dateSending(Agreement c) += dateSending(c);
dateSigningCustomer(Agreement c) += dateSigningCustomer(c);
dateReceiving(Agreement c) += dateReceiving(c);
dateClosing(Agreement c) += dateClosing(c);
customer(Agreement c) += customer(c);
legalEntity(Agreement a) += legalEntity(a);
company(Agreement a) += company(contract(a));
contract(Agreement a) += contract(a);
sum(Agreement c) += sum(c);
description(Agreement c) += CONCAT ' ', 'Согл.', '№' + number(c), 'от ' + toDateDDMMYY(date(c)), 'по дог.', '№' + number(contract(c)), 'от ' + toDateDDMMYY(date(contract(c)));
sendingWay(Agreement c) += sendingWay(c);
fileName(Agreement c) += ISTRING[250] (CONCAT '_', nameLegalEntity(c), 'Соглашение', number(c), 'от_' + toDateDDMMYY(date(c)));

EXTEND CLASS DocType {
    agreement 'Соглашение'
}
docType(Agreement a) += DocType.agreement IF a IS Agreement;
docType(AgreementType c) += DocType.agreement IF c IS AgreementType;

FORM agreement 'Соглашение'
    OBJECTS o = Agreement PANEL
    PROPERTIES(o) id, nameNumerator, series, number, date, name, nameType, numberContract, nameCustomer READONLY, nameLegalEntity READONLY, sum,
                  dateSending, dateReceiving, dateClosing, note, text, nameCompany READONLY, nameAuthorisedPersonLegalEntity, nameAuthorisedPersonCompany, 
                  authorisedDocumentLegalEntity, authorisedDocumentCompany, nameSendingWay, terms
    
    EDIT Agreement OBJECT o
;

DESIGN agreement {
    OBJECTS {
        NEW row1 {
            type = CONTAINERH;
            alignment = STRETCH;
            NEW main {
                caption = 'Основные параметры';
                MOVE PROPERTY(id(o));
                MOVE PROPERTY (name(o));
                MOVE PROPERTY (nameNumerator(o));
                NEW number {
                    type = CONTAINERH;
                    MOVE PROPERTY (series(o));
                    MOVE PROPERTY (number(o));
                }
                MOVE PROPERTY(date(o));
                MOVE PROPERTY(nameType(o));
            }
            NEW legalEntities {
                caption = 'Контрагенты';
                flex = 1;
                MOVE PROPERTY(numberContract(o));
                MOVE PROPERTY(nameCompany(o));
                NEW autC {
                    type = CONTAINERH;
                    fill = 1;
                    MOVE PROPERTY (nameAuthorisedPersonCompany(o));
                    MOVE PROPERTY (authorisedDocumentCompany(o));
                }
                MOVE PROPERTY(nameCustomer(o));
                MOVE PROPERTY(nameLegalEntity(o));
                NEW autL {
                    type = CONTAINERH;
                    fill = 1;
                    MOVE PROPERTY (nameAuthorisedPersonLegalEntity(o));
                    MOVE PROPERTY (authorisedDocumentLegalEntity(o));
                }
            }
        }
        NEW processing {
            type = CONTAINERH;
            caption = 'Обработка';
            MOVE PROPERTY(nameSendingWay(o));
            MOVE PROPERTY(dateSending(o));
            MOVE PROPERTY(dateReceiving(o));
            MOVE PROPERTY(dateClosing(o));
        }
        NEW row3 {
            type = CONTAINERH;
            NEW payment {
                caption = 'Задолженность';
                type = CONTAINERH;
                MOVE PROPERTY(sum(o));
            }
            NEW add {
                type = CONTAINERH;
                caption = 'Дополнительная информация';
                MOVE PROPERTY(note(o));
            }
        }
        NEW details {
            tabbed = TRUE;
            fill = 1;
            NEW text {
                caption = 'Содержание';
                fill = 1;
                type = CONTAINERH;
                NEW texts {
                    caption = 'Текст';
                    fill = 1;
                    MOVE PROPERTY (text(o)) { 
                        caption = '';
                        fill = 1;
                    }
                }
                NEW terms {
                    caption = 'Условия';
                    fill = 1;
                    MOVE PROPERTY (terms(o)) { 
                        caption = '';
                        fill = 1;
                    }
                }
            }
        }
    }
}

FORM agreements 'Соглашения'
    OBJECTS o = Agreement LAST 
    PROPERTIES(o) READONLY id, nameCompany, nameLegalEntity, numberContract, number, date, name, nameType, sum, nameSendingWay, dateSending, dateReceiving, dateClosing, note, textString
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    ORDERS date(o)
;

FORM dialogAgreements 'Соглашения'
    OBJECTS o = Agreement LAST 
    PROPERTIES(o) READONLY id, numberContract, number, date, name, nameType, sum, nameSendingWay, dateSending, dateReceiving, dateClosing, note, textString
    ORDERS date(o)

    FILTERGROUP active
        FILTER 'Активные' NOT dateClosing(o) <= currentDate() DEFAULT
    
    LIST Agreement OBJECT o
;

NAVIGATOR {
    contractFolder {
        NEW agreements;
    }
}

addAgreement 'Добавить' (Contract c) {
    NESTEDSESSION NEW a = Agreement {
        contract(a) <- c;
        date(a) <- currentDate();
        SHOW agreement OBJECTS o = a DOCKED;
    }
} IMAGE 'add.png'  CHANGEKEY 'INSERT' HIDE;

EXTEND FORM contract 
    OBJECTS ag = Agreement LAST 
    PROPERTIES (ag) READONLY id, numberContract, number, date, name, nameType, sum, nameSendingWay, dateSending, dateReceiving, dateClosing, note, textString
    PROPERTIES DRAW ag TOOLBAR addAgreement(o)
    PROPERTIES(ag) NESTEDSESSION EDIT, DELETE
    ORDERS date(ag)
    FILTERS contract(ag) == o
    FILTERGROUP activeAg FILTER 'Активные' active(ag) DEFAULT 
;

DESIGN contract {
    details {
        MOVE BOX (ag) {
            caption = 'Соглашения';
        }
    }
}

WHEN SET (Agreement a IS Agreement) AND NOT number(a) DO {  
    number(a) <- ISTRING[15] (INTEGER ([GROUP MAX number(Agreement ag) BY contract(ag)](contract(a))) (+) 1); 
}