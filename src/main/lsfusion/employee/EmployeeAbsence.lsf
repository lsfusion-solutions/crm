MODULE EmployeeAbsence;

REQUIRE Employee, WorkingHours;

NAMESPACE Employee;

CLASS Absence 'Отсутствие';
TABLE absence (Absence);

id 'Код' = DATA STRING[15] (Absence) INDEXED CHARWIDTH 5 IN id;
absence (id) = GROUP AGGR Absence c BY id (c);

employee = DATA Employee (Absence);
idEmployee 'Код сотрудника' (Absence a) = id(employee(a));
nameEmployee 'Сотрудник' (Absence a) = name(employee(a));

CLASS AbsenceReason 'Причина отсутствия';
TABLE absenceReason (AbsenceReason);

name 'Наименование' = DATA ISTRING[100] (AbsenceReason) CHARWIDTH 15;
inactive 'Неактивный' = DATA BOOLEAN (AbsenceReason);

FORM absenceReason 'Причина отсутствия'
    OBJECTS o = AbsenceReason PANEL
    PROPERTIES(o) name, inactive
    
    EDIT AbsenceReason OBJECT o
;

FORM absenceReasons 'Причины отсутствия'
    OBJECTS o = AbsenceReason
    PROPERTIES(o) READONLY name, inactive
    FILTERGROUP active FILTER 'Активные' NOT inactive(o) DEFAULT 
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogAbsenceReasons 'Причины отсутствия'
    OBJECTS o = AbsenceReason
    PROPERTIES(o) READONLY name, inactive
    FILTERGROUP active FILTER 'Активные' NOT inactive(o) DEFAULT 
    
    LIST AbsenceReason OBJECT o
;

reason = DATA AbsenceReason(Absence) NONULL;
nameReason 'Причина отсутствия' (Absence a) = name(reason(a));

dateFrom 'Дата с' = DATA DATE (Absence);
dateTo 'Дата по' = DATA DATE (Absence);
hours 'Кол-во часов' = DATA NUMERIC[7,2](Absence);
date 'Дата ввода' = DATA DATE (Absence);
note 'Примечание' = DATA ISTRING[100] (Absence) CHARWIDTH 30;

CONSTRAINT dateTo(Absence a) < dateFrom(a) MESSAGE 'Дата по должна быть не раньше даты с';

@addRoleApplicationSetting(editDays, 'Дней для редактирования отсутствия', INTEGER);

isEditable (Absence a) = NOT dateFrom(a) < sum(currentDate(), -editDays(mainRole(currentUser()))) AND NOT dateTo(a) < sum(currentDate(), -editDays(mainRole(currentUser())));

CONSTRAINT (CHANGED(dateFrom(Absence a)) OR CHANGED(dateTo(a))) AND NOT isEditable(a) MESSAGE 'Дата отсутствия не попадает в период редактирования';

workingHours 'Рабочих часов за интервал' (Absence a) = GROUP SUM workingHours(DATE d) IF iterate(d, dateFrom(a), dateTo(a));

hours 'Часы' (Absence a, DATE d) = PARTITION UNGROUP hours
                                                             LIMIT STRICT workingHours(d) IF d >= dateFrom(a) AND d <= dateTo(a)
                                                             ORDER d
                                                             BY a; 
                                                      

absenceHours 'Часы' (Employee e, DATE d) = GROUP SUM hours(Absence a, d) BY employee(a) CHARWIDTH 2;

employee(Absence a) <- currentUser() WHEN SET(a IS Absence);
date(Absence a) <- currentDate() WHEN SET(a IS Absence);
dateFrom(Absence a) <- currentDate() WHEN SET(a IS Absence);
dateTo(Absence a) <- currentDate() WHEN SET(a IS Absence);
hours(Absence a) <- workingHours(currentDate(), currentUser()) WHEN SET (a IS Absence);

FORM absence 'Отсутствие сотрудников'
    OBJECTS o = Absence PANEL
    PROPERTIES(o) id, nameEmployee, nameReason, dateFrom, dateTo, hours, date, note

    EDIT Absence OBJECT o
;

DESIGN absence {
    OBJECTS {
        NEW data FIRST {
            NEW firstData {
                caption = 'Основные параметры';
                horizontal = TRUE;
                MOVE PROPERTY (id(o));
                MOVE PROPERTY (date(o));
            }
            NEW secondData {
                horizontal = TRUE;
                caption = 'Время отсутствия';
                MOVE PROPERTY (dateFrom(o));
                MOVE PROPERTY (dateTo(o));
                MOVE PROPERTY (hours(o));
            }
        }
        NEW employee {
            caption = 'Сотрудник';
            alignment = STRETCH;
            MOVE PROPERTY (nameEmployee(o));
        }
        NEW contact {
            caption = 'Описание';
            alignment = STRETCH;
            MOVE PROPERTY (nameReason(o));
            MOVE PROPERTY (note(o));
        }
    }
}

WHEN LOCAL FORMS absence CHANGED (dateFrom(Absence a)) OR CHANGED (dateTo(a)) DO {
    hours(a) <- GROUP SUM workingHours(DATE d, currentUser()) IF d >= dateFrom(a) AND d <= dateTo(a);
}

FORM absences 'Отсутствие сотрудников'
    OBJECTS o = Absence LAST 
    PROPERTIES(o) READONLY id, nameEmployee, nameReason, dateFrom, dateTo, hours, workingHours, date, note
    PROPERTIES(o) NEWSESSION NEW, EDIT SHOWIF isEditable(o), DELETE SHOWIF isEditable(o)
    ORDERS date(o)

    OBJECTS d = DATE
    PROPERTIES READONLY VALUE(d), extractDOWName(d), hours(o, d)
    FILTERS hours(o, d)
;

DESIGN absences {
    OBJECTS {
        type = SPLITH;
        BOX (o) { fill = 4; }
        BOX (d) { fill = 1; }
    }
}

FORM dialogAbsences 'Отсутствие сотрудников'
    OBJECTS o = Absence LAST 
    PROPERTIES(o) READONLY id, nameEmployee, nameReason, dateFrom, dateTo, hours, workingHours, date, note
    ORDERS date(o)
    
    LIST Absence OBJECT o
;

NAVIGATOR {
    employeeFolder {
        NEW absences;
        NEW absenceReasons;
    }
}