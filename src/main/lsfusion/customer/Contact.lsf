MODULE Contact;

REQUIRE LegalEntity, Authentication;

NAMESPACE Contact;

CLASS Contact 'Контакт' : Authentication.CustomUser;
TABLE contact (Contact);

id 'Код' = DATA STRING[15] (Contact) INDEXED CHARWIDTH 5 IN id;
contact (id) = GROUP AGGR Contact c BY id (c);

customer = DATA Customer(Contact);
idCustomer 'Код клиента' (Contact c) = id(customer(c));
nameCustomer 'Клиент' (Contact c) = name(customer(c)) IN id;

skipCustomer 'Клиент не обязателен' = ABSTRACT BOOLEAN (Contact);
CONSTRAINT Contact c IS Contact AND NOT customer(c) AND NOT skipCustomer(c) MESSAGE 'Для контакта должен быть задан клиент';

legalEntity = DATA LegalEntity(Contact);
idLegalEntity 'Код организации' (Contact c) = id(legalEntity(c));
nameLegalEntity 'Организация' (Contact c) = name(legalEntity(c)) IN id;

WHEN LOCAL SETCHANGED(customer(legalEntity(Contact c))) DO
    customer(c) <- customer(legalEntity(c));

CONSTRAINT legalEntity(Contact c) AND customer(c) AND NOT customer(c) = customer(legalEntity(c)) CHECKED BY legalEntity[Contact] MESSAGE 'Клиент не совпадает с организацией';

merge (Customer from, Customer to) + { customer(Contact c) <- to WHERE customer(c) = from; }

middleName 'Отчество' = DATA STRING[100](Contact) CHARWIDTH 15;
initials 'Инициалы (И.О.)' (Contact c) = STRING[5](CONCAT '', left(firstName(c), 1) + '.', left(middleName(c), 1) + '.') CHARWIDTH 5;

shortName 'ФИО (сокр.)' = DATA STRING[100](Contact) CHARWIDTH 20;
fullName 'ФИО (полное)' = DATA STRING[150](Contact) CHARWIDTH 30;
fullNameRp 'ФИО (полное)(р.п.)' (Contact c) = DATA STRING[100] (Contact) CHARWIDTH 30;

WHEN LOCAL CHANGED (lastName(Contact c)) OR CHANGED (firstName(c)) OR CHANGED (middleName(c)) AND NOT CHANGED (fullName(c)) DO {
    shortName (c) <- CONCAT ' ', lastName(c), initials(c);
    fullName (c) <- CONCAT ' ', lastName(c), firstName(c), middleName(c);
}


CLASS Position 'Должность';
TABLE position (Position);

name 'Наименование' = DATA ISTRING[100] (Position) CHARWIDTH 15;
nameRp 'Наименование (род.падеж)' = DATA ISTRING[100] (Position) CHARWIDTH 15;
inactive 'Неактивный' = DATA BOOLEAN (Position);

in 'Отм.' = DATA LOCAL BOOLEAN (Position);

merge ABSTRACT LIST (Position, Position);

merge 'Объединить' (Position p) {
    NEWSESSION NESTED (in[Position]) {
        FOR in(Position pp) DO {
            name(p) <- OVERRIDE name(p), name(pp);
            nameRp(p) <- OVERRIDE nameRp(p), nameRp(pp);
            merge(pp, p);
            DELETE pp WHERE pp != p;
        }
        APPLY;
    }
} CONFIRM;

FORM position 'Должность'
    OBJECTS o = Position PANEL
    PROPERTIES(o) name, nameRp, inactive
    
    EDIT Position OBJECT o
;

FORM positions 'Должности'
    OBJECTS o = Position
    PROPERTIES(o) in, merge DRAW o TOOLBAR
    PROPERTIES(o) READONLY name, nameRp, inactive 
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogPositions 'Должности'
    OBJECTS o = Position
    PROPERTIES(o) READONLY name, inactive
    PROPERTIES(o) NEWSESSION EDIT
    FILTERGROUP active FILTER 'Активные' NOT inactive(o) DEFAULT
    
    LIST Position OBJECT o
;

NAVIGATOR {
    masterData {
        NEW positions;
    }
}

position = DATA Position(Contact);
namePosition 'Должность' (Contact c) = name(position(c)) CHARWIDTH 20; 
nameRpPosition 'Должность (р.п.)' (Contact c) = nameRp(position(c));

merge(Position from, Position to) + { position(Contact c) <- to WHERE position(c) == from; }

skype 'Skype' = DATA STRING[50](Contact) CHARWIDTH 15;
note 'Примечание' = DATA ISTRING[100](Contact) CHARWIDTH 20;

CLASS Phone 'Телефон';
TABLE phone(Phone);

number 'Номер телефона' = DATA STRING[20](Phone);

CLASS PhoneType 'Тип телефона';
TABLE phoneType (PhoneType);

name 'Наименование' = DATA STRING[50](PhoneType);

type = DATA PhoneType(Phone);
nameType 'Тип телефона' (Phone p) = name(type(p));

FORM phoneType 'Тип телефона'
    OBJECTS t = PhoneType PANEL 
    PROPERTIES (t) name 
    
    EDIT PhoneType OBJECT t
;

FORM phoneTypes 'Типы телефона'
    OBJECTS t = PhoneType
    PROPERTIES (t) READONLY name
    PROPERTIES (t) NEWSESSION NEW, EDIT, DELETE 
    
    LIST PhoneType OBJECT t
;

contact (Phone p) = DATA Contact(Phone) NONULL DELETE;

number(Contact c, PhoneType t) = GROUP MAX number(Phone p) BY contact(p), type(p);
addPhones 'Доп. телефоны' (Contact c) = GROUP CONCAT number(Phone p), ', ' ORDER p BY contact(p) CHARWIDTH 15;

authorisedDocument 'На основании' = DATA ISTRING[1000](Contact) CHARWIDTH 15;

FORM contact 'Контакт'
    OBJECTS o = Contact PANEL
    PROPERTIES(o) id, lastName, firstName, middleName, shortName, fullName, fullNameRp, nameCustomer, nameLegalEntity, 
                  namePosition, email, phone, skype, note, authorisedDocument, login
    
    OBJECTS p = Phone
    PROPERTIES (p) nameType, number, NEW, DELETE 
    FILTERS contact(p) == o
    
    EDIT Contact OBJECT o
;

DESIGN contact {
    OBJECTS {
        NEW main {
            horizontal = TRUE;
            alignment = STRETCH;
            NEW position {
                caption = 'Основные параметры';
                MOVE PROPERTY (id(o));
                MOVE PROPERTY (namePosition(o));
                MOVE PROPERTY (login(o));
            }
            NEW client {
                flex = 1;
                caption = 'Клиент';
                MOVE PROPERTY (nameCustomer(o));
                MOVE PROPERTY (nameLegalEntity(o));
            }
        }
        NEW names {
            horizontal = TRUE;
            caption = 'Имя';
            alignment = STRETCH;
            NEW name {
                width = 300;
                MOVE PROPERTY (lastName(o));
                MOVE PROPERTY (firstName(o));
                MOVE PROPERTY (middleName(o));
            }
            NEW fio {
                flex = 1;
                MOVE PROPERTY (shortName(o));
                MOVE PROPERTY (fullName(o));
                MOVE PROPERTY (fullNameRp(o));
            }
        }
        NEW add {
            caption = 'Контакты';
            alignment = STRETCH;
            MOVE PROPERTY (email(o));
            MOVE PROPERTY (phone(o)) { charWidth = 20;}
            MOVE PROPERTY (skype(o));
        }
        NEW note {
            caption = 'Дополнительные параметры';
            alignment = STRETCH;
            MOVE PROPERTY (note(o));
            MOVE PROPERTY (authorisedDocument(o));
        }
        MOVE BOX (p);
    }
}

FORM contacts 'Контакты'
    OBJECTS o = Contact
    PROPERTIES(o) READONLYIF isReadonly() id, lastName, firstName, middleName, login, nameCustomer, nameLegalEntity, namePosition, email, phone, addPhones, skype, note, authorisedDocument
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    ORDERS lastName(o)
;

@extendFormEditable(contacts);

FORM dialogContacts 'Контакты'
    OBJECTS o = Contact
    PROPERTIES(o) READONLY id, lastName, firstName, middleName, login, nameCustomer, nameLegalEntity, namePosition, email, phone, addPhones, skype, note, authorisedDocument
    PROPERTIES(o) NEWSESSION NEW, EDIT
    ORDERS lastName(o)
    
    LIST Contact OBJECT o
;

NAVIGATOR {
    customerFolder {
        NEW contacts;
    }
}

authorisedPerson = DATA Contact(LegalEntity);
nameAuthorisedPerson 'Уполномоченное лицо' (LegalEntity l) = name(authorisedPerson(l));
authorisedDocument 'На основании' = DATA ISTRING[1000](LegalEntity) CHARWIDTH 20;

CONSTRAINT authorisedPerson(LegalEntity l) AND NOT legalEntity(authorisedPerson(l)) == l CHECKED BY authorisedPerson[LegalEntity] 
    MESSAGE 'Организация уполномоченного лица не соответствует организации';

EXTEND FORM legalEntities PROPERTIES nameAuthorisedPerson(o), authorisedDocument(o);
EXTEND FORM dialogLegalEntities PROPERTIES nameAuthorisedPerson(o), authorisedDocument(o);
EXTEND FORM legalEntity PROPERTIES nameAuthorisedPerson(o), authorisedDocument(o);

DESIGN legalEntity {
    client {
        MOVE PROPERTY (nameAuthorisedPerson(o)) { charWidth = 30; }
        MOVE PROPERTY (authorisedDocument(o)) { charWidth = 30; }
    }
}